/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author ataturkoglu
 */
public class feedbackGUI extends javax.swing.JFrame {

    private ArrayList<Account> feedbacks;
    private ArrayList<forum> questions;

    /**
     * Creates new form feedback
     */
    public feedbackGUI() {
        initComponents();
        feedbacks = new ArrayList<>();
        questions = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameGroup = new javax.swing.ButtonGroup();
        tabPane = new javax.swing.JTabbedPane();
        forumPanel = new javax.swing.JPanel();
        forumLb = new javax.swing.JLabel();
        nameLb2 = new javax.swing.JLabel();
        subjectLb = new javax.swing.JLabel();
        questionLb = new javax.swing.JLabel();
        firstNameTf2 = new javax.swing.JTextField();
        subjectTf = new javax.swing.JTextField();
        questionPane = new javax.swing.JScrollPane();
        questionTf = new javax.swing.JTextArea();
        sendNameBtn = new javax.swing.JRadioButton();
        hideNameBtn = new javax.swing.JRadioButton();
        submitBtn2 = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        displayBtn2 = new javax.swing.JButton();
        lastNameLb = new javax.swing.JLabel();
        lastNameTf2 = new javax.swing.JTextField();
        emailLb2 = new javax.swing.JLabel();
        emailTf2 = new javax.swing.JTextField();
        feedbackPanel = new javax.swing.JPanel();
        submitBtn = new javax.swing.JButton();
        feedbackPane = new javax.swing.JScrollPane();
        feedbackTf = new javax.swing.JTextArea();
        emailTf = new javax.swing.JTextField();
        firstNameTf = new javax.swing.JTextField();
        feedbackLb = new javax.swing.JLabel();
        emailLb = new javax.swing.JLabel();
        nameLb = new javax.swing.JLabel();
        feedPageLb = new javax.swing.JLabel();
        displayBtn = new javax.swing.JButton();
        lastnameLb = new javax.swing.JLabel();
        lastNameTf = new javax.swing.JTextField();
        navBar1 = new javax.swing.JMenuBar();
        homeF1 = new javax.swing.JMenu();
        homeItem1 = new javax.swing.JMenuItem();
        coursesF = new javax.swing.JMenu();
        coursesItem = new javax.swing.JMenuItem();
        signupMenu = new javax.swing.JMenuItem();
        loginItem = new javax.swing.JMenuItem();
        schoolF = new javax.swing.JMenu();
        applicationItem = new javax.swing.JMenuItem();
        donationItem = new javax.swing.JMenuItem();
        contactT = new javax.swing.JMenu();
        forum = new javax.swing.JMenuItem();
        volunteerT = new javax.swing.JMenu();
        volunteerItem = new javax.swing.JMenuItem();
        mathT = new javax.swing.JMenu();
        mathItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        forumLb.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        forumLb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        forumLb.setText("Forum");

        nameLb2.setText("Name:");

        subjectLb.setText("Subject");

        questionLb.setText("Question");

        firstNameTf2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTf2ActionPerformed(evt);
            }
        });

        questionTf.setColumns(20);
        questionTf.setRows(5);
        questionPane.setViewportView(questionTf);

        nameGroup.add(sendNameBtn);
        sendNameBtn.setText("Send with name");

        nameGroup.add(hideNameBtn);
        hideNameBtn.setText("Hide my name.");

        submitBtn2.setText("Submit");
        submitBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtn2ActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        displayBtn2.setText("Display");
        displayBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtn2ActionPerformed(evt);
            }
        });

        lastNameLb.setText("Last name:");

        emailLb2.setText("Email:");

        javax.swing.GroupLayout forumPanelLayout = new javax.swing.GroupLayout(forumPanel);
        forumPanel.setLayout(forumPanelLayout);
        forumPanelLayout.setHorizontalGroup(
            forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(forumLb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(forumPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(forumPanelLayout.createSequentialGroup()
                        .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lastNameLb)
                            .addComponent(nameLb2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(firstNameTf2)
                            .addComponent(lastNameTf2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(forumPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(forumPanelLayout.createSequentialGroup()
                                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(questionLb)
                                    .addComponent(subjectLb)
                                    .addComponent(emailLb2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(forumPanelLayout.createSequentialGroup()
                                        .addComponent(sendNameBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(hideNameBtn))
                                    .addComponent(questionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(emailTf2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                        .addComponent(subjectTf, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addGroup(forumPanelLayout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(forumPanelLayout.createSequentialGroup()
                                        .addComponent(searchBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(displayBtn2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deleteBtn))
                                    .addComponent(submitBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        forumPanelLayout.setVerticalGroup(
            forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(forumPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(forumLb, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLb2)
                    .addComponent(firstNameTf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLb)
                    .addComponent(lastNameTf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLb2)
                    .addComponent(emailTf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectLb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(questionLb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendNameBtn)
                    .addComponent(hideNameBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitBtn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(forumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn)
                    .addComponent(displayBtn2)
                    .addComponent(deleteBtn))
                .addGap(12, 12, 12))
        );

        tabPane.addTab("Forum", forumPanel);

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        feedbackTf.setColumns(20);
        feedbackTf.setLineWrap(true);
        feedbackTf.setRows(5);
        feedbackPane.setViewportView(feedbackTf);

        feedbackLb.setText("Feedback:");

        emailLb.setText("Email:");

        nameLb.setText("Name:");

        feedPageLb.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        feedPageLb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedPageLb.setText("Give us a feedback");

        displayBtn.setText("Display");
        displayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtnActionPerformed(evt);
            }
        });

        lastnameLb.setText("Last name: ");

        javax.swing.GroupLayout feedbackPanelLayout = new javax.swing.GroupLayout(feedbackPanel);
        feedbackPanel.setLayout(feedbackPanelLayout);
        feedbackPanelLayout.setHorizontalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, feedbackPanelLayout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(feedbackPanelLayout.createSequentialGroup()
                                    .addComponent(emailLb)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(emailTf, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(feedbackPanelLayout.createSequentialGroup()
                                    .addComponent(nameLb)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(firstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(feedbackPanelLayout.createSequentialGroup()
                            .addComponent(feedbackLb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(feedbackPane, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1))
                        .addGroup(feedbackPanelLayout.createSequentialGroup()
                            .addComponent(lastnameLb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(feedbackPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayBtn))))
                .addContainerGap(127, Short.MAX_VALUE))
            .addComponent(feedPageLb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        feedbackPanelLayout.setVerticalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(feedPageLb, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastnameLb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLb)
                    .addComponent(emailTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(feedbackLb)
                    .addComponent(feedbackPane, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayBtn)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        tabPane.addTab("Feedback", feedbackPanel);

        navBar1.setBackground(new java.awt.Color(204, 204, 255));

        homeF1.setText("Home");

        homeItem1.setText("Home");
        homeItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeItem1ActionPerformed(evt);
            }
        });
        homeF1.add(homeItem1);

        navBar1.add(homeF1);

        coursesF.setText("Courses");

        coursesItem.setText("Courses");
        coursesItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursesItemActionPerformed(evt);
            }
        });
        coursesF.add(coursesItem);

        signupMenu.setText("Sign Up");
        signupMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupMenuActionPerformed(evt);
            }
        });
        coursesF.add(signupMenu);

        loginItem.setText("Log In");
        loginItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginItemActionPerformed(evt);
            }
        });
        coursesF.add(loginItem);

        navBar1.add(coursesF);

        schoolF.setText("School");

        applicationItem.setText("Application");
        applicationItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applicationItemActionPerformed(evt);
            }
        });
        schoolF.add(applicationItem);

        donationItem.setText("Donation");
        donationItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donationItemActionPerformed(evt);
            }
        });
        schoolF.add(donationItem);

        navBar1.add(schoolF);

        contactT.setText("Contact");

        forum.setText("Forum");
        forum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forumActionPerformed(evt);
            }
        });
        contactT.add(forum);

        navBar1.add(contactT);

        volunteerT.setText("Volunteer");

        volunteerItem.setText("Volunteer Teacher");
        volunteerItem.setToolTipText("");
        volunteerItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volunteerItemActionPerformed(evt);
            }
        });
        volunteerT.add(volunteerItem);

        navBar1.add(volunteerT);

        mathT.setText("Math Game");

        mathItem.setText("Math Game");
        mathItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mathItemActionPerformed(evt);
            }
        });
        mathT.add(mathItem);

        navBar1.add(mathT);

        setJMenuBar(navBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        // if else to prevent any input from being empty
        if (firstNameTf.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the first name field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (lastNameTf.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the last name field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (emailTf.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the email field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (feedbackTf.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the feedback field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            // If all fields are filled, perform form operations
            feedback myfeedback = new feedback();

            // Get texts from form
            myfeedback.setFirstName(firstNameTf.getText());
            myfeedback.setLastName(lastNameTf.getText());
            myfeedback.setEmail(emailTf.getText().toLowerCase());
            myfeedback.setFeedback(feedbackTf.getText());

            feedbacks.add(myfeedback);

            // File I/O (Submit button save the information in feedback.dat same time)
            File f;
            FileOutputStream fStream;
            ObjectOutputStream oStream;

            try {
                // Create a File object to represent the file 'feedback.dat'
                f = new File("feedback.dat");

                // Create a FileOutputStream to write data to the File 'f'
                fStream = new FileOutputStream(f);

                // Wrap the FileOutputStream in an ObjectOutputStream. This allows us to write objects to the stream
                oStream = new ObjectOutputStream(fStream);

                // Write the 'feedbacks' ArrayList object to the ObjectOutputStream, which serializes the object to the file
                oStream.writeObject(feedbacks);

                // Close the ObjectOutputStream
                oStream.close();
            } catch (IOException e) {
                // If an IOException is caught, print its message to the console.
                System.out.println(e);
            }

            // Clear the form after submit
            firstNameTf.setText("");
            lastNameTf.setText("");
            emailTf.setText("");
            feedbackTf.setText("");

            JOptionPane.showMessageDialog(null, "Thank You!");
        }


    }//GEN-LAST:event_submitBtnActionPerformed

    private void firstNameTf2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTf2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTf2ActionPerformed

    private void displayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBtnActionPerformed
        // TODO add your handling code here:
        // When user click display button the button first load and read the file and after display informations
        File f;
        FileInputStream fStream;
        ObjectInputStream oStream;

        try {
            f = new File("feedback.dat");

            // Create a FileInputStream
            fStream = new FileInputStream(f);

            // Wrap the FileInputStream in an ObjectInputStream to read objects from the stream
            oStream = new ObjectInputStream(fStream);

            // Read the serialized object from the file and cast it to an ArrayList of 'feadback' objects
            feedbacks = (ArrayList<Account>) oStream.readObject();

            // Close the ObjectInputStream
            oStream.close();
        } catch (IOException | ClassNotFoundException e) {
            // If an IOException or ClassNotFoundException is caught, print its message to the console
            System.out.println(e);
        }

        if (!feedbacks.isEmpty()) {
            // Adding StringBuilder to to connect feedbacks details
            StringBuilder detailsBuilder = new StringBuilder();

            // Loop through each 'feedback' object in the 'feedbacks' ArrayList
            for (Account myfeedback : feedbacks) {
                // Append the details of each feedback to the StringBuilder
                detailsBuilder.append(myfeedback.getDetails()).append("\n" + "\n");
            }

            // Create a JTextArea to display the feedback details
            JTextArea textArea = new JTextArea(detailsBuilder.toString());
            // Enables line wrapping in the text area
            // This means long lines of text will wrap onto the next line
            textArea.setLineWrap(true);
            // Sets the wrapping style to wrap by words
            // This makes sure that the line breaks happen between words not in the middle of them
            textArea.setWrapStyleWord(true);
            // Makes the text area non-editable
            textArea.setEditable(false);
            // Set the textarea sizes
            textArea.setColumns(30);
            textArea.setRows(10);

            // Place the JTextArea in a JScrollPane to add scrollbars
            JScrollPane scrollPane = new JScrollPane(textArea);

            // Display the scrollPane with the feedback details in a JOptionPane dialog
            JOptionPane.showMessageDialog(null, scrollPane);
        } else {
            // If the 'feedback' ArrayList is empty, display a message indicating no data
            JOptionPane.showMessageDialog(null, "No feedback data to display.", "No Data", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_displayBtnActionPerformed

    private void submitBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtn2ActionPerformed
        // TODO add your handling code here:
        // if else to prevent any input from being empty
        forum myForum = new forum();
        if (firstNameTf2.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the first name field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (lastNameTf2.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the last name field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (subjectTf.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the subject field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (questionTf.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in the question field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (!(sendNameBtn.isSelected() || hideNameBtn.isSelected())) {
            JOptionPane.showMessageDialog(this, "Please select one of the name options.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            // If all fields are filled, perform form operations
            if (sendNameBtn.isSelected()) {

                myForum.setFirstName(firstNameTf2.getText());
                myForum.setLastName(lastNameTf2.getText());
                myForum.setEmail(emailTf2.getText().toLowerCase());
                myForum.setSubject(subjectTf.getText());
                myForum.setQuestion(questionTf.getText());

                questions.add(myForum);

                // File I/O (Submit button save the information in questions.dat same time)
                File f;
                FileOutputStream fStream;
                ObjectOutputStream oStream;

                try {
                    f = new File("questions.dat");
                    fStream = new FileOutputStream(f);
                    oStream = new ObjectOutputStream(fStream);

                    oStream.writeObject(questions);
                    oStream.close();
                } catch (IOException e) {
                    System.out.println(e);
                }

                firstNameTf2.setText("");
                subjectTf.setText("");
                questionTf.setText("");
                lastNameTf2.setText("");
                emailTf2.setText("");
                nameGroup.clearSelection();

            } else if (hideNameBtn.isSelected()) {
                // If the keep name button is checked, set the name and email as anonymous

                myForum.setFirstName("Anonymous");
                myForum.setLastName("");
                myForum.setEmail("Anonymous");
                myForum.setSubject(subjectTf.getText());
                myForum.setQuestion(questionTf.getText());

                questions.add(myForum);

                // File I/O (Submit button save the information in questions.dat same time)
                File f;
                FileOutputStream fStream;
                ObjectOutputStream oStream;

                try {
                    f = new File("questions.dat");
                    fStream = new FileOutputStream(f);
                    oStream = new ObjectOutputStream(fStream);

                    oStream.writeObject(questions);
                    oStream.close();
                } catch (IOException e) {
                    System.out.println(e);
                }

                firstNameTf2.setText("");
                lastNameTf2.setText("");
                subjectTf.setText("");
                questionTf.setText("");
                emailTf2.setText("");
                nameGroup.clearSelection();
            }
            JOptionPane.showMessageDialog(null, "Your question has been sent, your question's ID number: " + myForum.getId());
        }


    }//GEN-LAST:event_submitBtn2ActionPerformed

    private void displayBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBtn2ActionPerformed
        // TODO add your handling code here:
        // When user click display button the button first load and read the file and after display informations
        File f;
        FileInputStream fStream;
        ObjectInputStream oStream;

        try {
            f = new File("questions.dat");
            // Create a FileInputStream
            fStream = new FileInputStream(f);

            // Wrap the FileInputStream in an ObjectInputStream to read objects from the stream
            oStream = new ObjectInputStream(fStream);

            // Read the serialized object from the file and cast it to an ArrayList of 'forum' objects
            questions = (ArrayList<forum>) oStream.readObject();

            // Close the ObjectInputStream
            oStream.close();
        } catch (IOException | ClassNotFoundException e) {
            // If an IOException or ClassNotFoundException is caught, print its message to the console
            System.out.println(e);
        }

        if (!questions.isEmpty()) {
            // Adding StringBuilder to connect forum details
            StringBuilder detailsBuilder = new StringBuilder();

            // Loop through each 'forum' object in the 'questions' ArrayList
            for (forum myForum : questions) {
                // Append the details of each question to the StringBuilder
                detailsBuilder.append(myForum.getDetails()).append("\n" + "\n");
            }

            // Create JTextArea object
            JTextArea textArea = new JTextArea(detailsBuilder.toString());
            // Allows the text in the JTextArea to wrap.
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            // The textarea only need the display all details for questions, so we set false for editable
            textArea.setEditable(false);
            // Set the textarea sizes
            textArea.setColumns(30);
            textArea.setRows(10);

            // Places the JTextArea object inside a JScrollPane. This adds scrollbars when the text field content exceeds the size of the field
            JScrollPane scrollPane = new JScrollPane(textArea);
            // And finally show scrollpane
            JOptionPane.showMessageDialog(null, scrollPane);
        } else {
            // If the 'questions' ArrayList is empty, display a message indicating no data
            JOptionPane.showMessageDialog(null, "No question data to display.", "No Data", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_displayBtn2ActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        // When user click search button the button first load and read the file and after display informations
        File f;
        FileInputStream fStream;
        ObjectInputStream oStream;

        try {
            f = new File("questions.dat");

            // Create a FileInputStream
            fStream = new FileInputStream(f);

            // Wrap the FileInputStream in an ObjectInputStream to read objects from the stream
            oStream = new ObjectInputStream(fStream);

            // Read the serialized object from the file and cast it to an ArrayList of 'forum' objects
            questions = (ArrayList<forum>) oStream.readObject();

            // Close the ObjectInputStream
            oStream.close();
        } catch (IOException | ClassNotFoundException e) {
            // If an IOException or ClassNotFoundException is caught, print its message to the console
            System.out.println(e);
        }

        // Check if the questions list is empty
        if (questions.isEmpty()) {
            // Show a message dialog if the list is empty
            JOptionPane.showMessageDialog(null, "Sorry, there are no question to search.", "No Data", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Ask the user for the name they want to search for
            String searchSubject = JOptionPane.showInputDialog(null, "Please enter the subject name to search for");

            // Check if the user's search input is empty
            if (searchSubject != null && !searchSubject.isEmpty()) {

                // Initialize a StringBuilder to connect matching question details
                StringBuilder matchingQuestions = new StringBuilder();

                // Iterate through the questions list
                for (forum myForum : questions) {
                    // Check if the current question subject name matches the searchSubject, ignoring case
                    if (myForum.getSubject().equalsIgnoreCase(searchSubject)) {
                        // Append the details of the matching question to the StringBuilder
                        matchingQuestions.append(myForum.getDetails()).append("\n\n");
                    }
                }

                // Check if any questioon matched the searchSubject
                if (matchingQuestions.length() == 0) {
                    // Show a message dialog if no matches were found
                    JOptionPane.showMessageDialog(null, "No question found with the given subject");
                } else {
                    // Show a message dialog with the details of all matching subject name

                    // Create JTextArea object
                    JTextArea textArea = new JTextArea(matchingQuestions.toString());
                    // Allows the text in the JTextArea to wrap.
                    textArea.setLineWrap(true);
                    textArea.setWrapStyleWord(true);
                    // The textarea only need the display all details for questions, so we set false for editable
                    textArea.setEditable(false);
                    // Set the textarea sizes
                    textArea.setColumns(30);
                    textArea.setRows(10);

                    // Places the JTextArea object inside a JScrollPane. This adds scrollbars when the text field content exceeds the size of the field
                    JScrollPane scrollPane = new JScrollPane(textArea);
                    // And finally show scrollpane
                    JOptionPane.showMessageDialog(null, scrollPane);
                }
            } else {
                // User canceled or closed without entering anything
                System.out.println("No input provided or cancelled by user");
            }

        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        ArrayList<forum> questions = new ArrayList<>();

        // When user click delete button the button first load and read the file and after do the delete function and save the file informations
        try {
            File f;
            FileInputStream fStream;
            ObjectInputStream oStream;
            f = new File("questions.dat");

            // Create a FileInputStream
            fStream = new FileInputStream(f);

            // Wrap the FileInputStream in an ObjectInputStream to read objects from the stream
            oStream = new ObjectInputStream(fStream);

            // Read the serialized object from the file and cast it to an ArrayList of 'teacher' objects
            questions = (ArrayList<forum>) oStream.readObject();

            // Close the ObjectInputStream
            oStream.close();
        } catch (IOException | ClassNotFoundException e) {
            // If an IOException or ClassNotFoundException is caught, print its message to the console
            System.out.println(e);
        }

        // Check if the questions list is empty
        if (questions.isEmpty()) {
            // Inform the user that there are no questions to delete
            JOptionPane.showMessageDialog(null, "Sorry, there are no questions to delete");
        } else {
            // Prompt the user to enter the ID of a question to delete
            String input = JOptionPane.showInputDialog(null, "Please enter an id to delete");

            // Check if the user has provided an input
            if (input != null && !input.isEmpty()) {
                try {
                    // Parse the user input into an integer representing the search term
                    int searchTerm = Integer.parseInt(input);

                    // This will be the forum object to remove, initially set to null
                    forum toRemove = null;

                    // loop over the list of questions
                    for (forum myForum : questions) {
                        // Check if the current question ID matches the search term
                        if (myForum.getId() == searchTerm) {
                            // If a match is found, set toRemove
                            toRemove = myForum;
                            // Break the loop when the matching forum is found
                            break;
                        }
                    }

                    // Check if a forum to remove was found
                    if (toRemove != null) {
                        // Remove the found forum from the list of questions
                        questions.remove(toRemove);
                        // Notify the user that the question has been successfully deleted
                        JOptionPane.showMessageDialog(null, toRemove.getDetails() + " has been deleted.");
                    } else {
                        // If no question was found with the given ID, inform the user
                        JOptionPane.showMessageDialog(null, "No question found with the given ID");
                    }

                } catch (NumberFormatException e) {
                    // If the input was not a number, warn the user
                    JOptionPane.showMessageDialog(null, "Please enter a valid number for the ID field.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                // If no input was entered or cancelled, print a message to the console
                System.out.println("No input provided or cancelled by user");
            }
        }

        try {
            File f;
            FileOutputStream fStream;
            ObjectOutputStream oStream;

            // Create a File object to represent the file 'questions.dat'
            f = new File("questions.dat");

            // Create a FileOutputStream to write data to the File 'f'
            fStream = new FileOutputStream(f);

            // Wrap the FileOutputStream in an ObjectOutputStream. This allows us to write objects to the stream
            oStream = new ObjectOutputStream(fStream);

            // Write the 'questions' ArrayList object to the ObjectOutputStream, which serializes the object to the file
            oStream.writeObject(questions);

            // Close the ObjectOutputStream
            oStream.close();
        } catch (IOException e) {
            // If an IOException is caught, print its message to the console.
            System.out.println(e);
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void homeItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeItem1ActionPerformed
        // TODO add your handling code here:
        ProjectGUI appGUI = new ProjectGUI();

        // make the new ui appear
        appGUI.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_homeItem1ActionPerformed

    private void coursesItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursesItemActionPerformed
        // TODO add your handling code here:
        CoursesGUI appGUI = new CoursesGUI();

        // make the new ui appear
        appGUI.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_coursesItemActionPerformed

    private void signupMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupMenuActionPerformed
        // creates a new instance of the Sign Up GUI
        SignupGUI newSignupGUI = new SignupGUI();

        // makes the new ui appear
        newSignupGUI.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_signupMenuActionPerformed

    private void loginItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginItemActionPerformed

        // creates a new instance of the Sign Up GUI
        LoginGUI newLogin = new LoginGUI();

        // makes the new ui appear
        newLogin.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_loginItemActionPerformed

    private void applicationItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applicationItemActionPerformed
        // creates a new instance of the Application GUI
        ApplicationGUI newApp = new ApplicationGUI();

        // makes the new ui appear
        newApp.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_applicationItemActionPerformed

    private void donationItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donationItemActionPerformed
        // creates a new instance of the Donation GUI
        DonationGUI newDonation = new DonationGUI();

        // makes the new ui appear
        newDonation.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_donationItemActionPerformed

    private void forumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forumActionPerformed
        // creates a new instance of the feedback GUI
        feedbackGUI newFeedback = new feedbackGUI();

        // makes the new ui appear
        newFeedback.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_forumActionPerformed

    private void volunteerItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volunteerItemActionPerformed
        // creates a new instance of the Sign Up GUI
        teacherGUI newTeacher = new teacherGUI();

        // makes the new ui appear
        newTeacher.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_volunteerItemActionPerformed

    private void mathItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mathItemActionPerformed
        // creates a new instance of the Sign Up GUI
        mathGUI newMath = new mathGUI();

        // makes the new ui appear
        newMath.setVisible(true);

        // close the Project GUI
        this.dispose();
    }//GEN-LAST:event_mathItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(feedbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(feedbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(feedbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(feedbackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new feedbackGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem applicationItem;
    private javax.swing.JMenu contactT;
    private javax.swing.JMenu coursesF;
    private javax.swing.JMenuItem coursesItem;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton displayBtn;
    private javax.swing.JButton displayBtn2;
    private javax.swing.JMenuItem donationItem;
    private javax.swing.JLabel emailLb;
    private javax.swing.JLabel emailLb2;
    private javax.swing.JTextField emailTf;
    private javax.swing.JTextField emailTf2;
    private javax.swing.JLabel feedPageLb;
    private javax.swing.JLabel feedbackLb;
    private javax.swing.JScrollPane feedbackPane;
    private javax.swing.JPanel feedbackPanel;
    private javax.swing.JTextArea feedbackTf;
    private javax.swing.JTextField firstNameTf;
    private javax.swing.JTextField firstNameTf2;
    private javax.swing.JMenuItem forum;
    private javax.swing.JLabel forumLb;
    private javax.swing.JPanel forumPanel;
    private javax.swing.JRadioButton hideNameBtn;
    private javax.swing.JMenu homeF1;
    private javax.swing.JMenuItem homeItem1;
    private javax.swing.JLabel lastNameLb;
    private javax.swing.JTextField lastNameTf;
    private javax.swing.JTextField lastNameTf2;
    private javax.swing.JLabel lastnameLb;
    private javax.swing.JMenuItem loginItem;
    private javax.swing.JMenuItem mathItem;
    private javax.swing.JMenu mathT;
    private javax.swing.ButtonGroup nameGroup;
    private javax.swing.JLabel nameLb;
    private javax.swing.JLabel nameLb2;
    private javax.swing.JMenuBar navBar1;
    private javax.swing.JLabel questionLb;
    private javax.swing.JScrollPane questionPane;
    private javax.swing.JTextArea questionTf;
    private javax.swing.JMenu schoolF;
    private javax.swing.JButton searchBtn;
    private javax.swing.JRadioButton sendNameBtn;
    private javax.swing.JMenuItem signupMenu;
    private javax.swing.JLabel subjectLb;
    private javax.swing.JTextField subjectTf;
    private javax.swing.JButton submitBtn;
    private javax.swing.JButton submitBtn2;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JMenuItem volunteerItem;
    private javax.swing.JMenu volunteerT;
    // End of variables declaration//GEN-END:variables
}
